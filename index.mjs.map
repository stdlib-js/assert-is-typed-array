{"version":3,"file":"index.mjs","sources":["../lib/ctors.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from '@stdlib/array-int8' ;\nimport Uint8Array from '@stdlib/array-uint8' ;\nimport Uint8ClampedArray from '@stdlib/array-uint8c' ;\nimport Int16Array from '@stdlib/array-int16' ;\nimport Uint16Array from '@stdlib/array-uint16' ;\nimport Int32Array from '@stdlib/array-int32' ;\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport Float32Array from '@stdlib/array-float32' ;\nimport Float64Array from '@stdlib/array-float64' ;\n\n\n// MAIN //\n\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from '@stdlib/utils-constructor-name' ;\nimport fcnName from '@stdlib/utils-function-name' ;\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of' ;\nimport hasFloat64ArraySupport from '@stdlib/assert-has-float64array-support' ;\nimport Float64Array from '@stdlib/array-float64' ;\nimport CTORS from './ctors.js' ;\nimport NAMES from './names.json' ;\n\n\n// VARIABLES //\n\n// Abstract `TypedArray` class:\nvar TypedArray = ( hasFloat64ArraySupport() ) ? getPrototypeOf( Float64Array ) : Dummy; // eslint-disable-line max-len\n\n// Ensure abstract typed array class has expected name:\nTypedArray = ( fcnName( TypedArray ) === 'TypedArray' ) ? TypedArray : Dummy;\n\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Dummy() {} // eslint-disable-line no-empty-function\n\n\n// MAIN //\n\n/**\n* Tests if a value is a typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a typed array\n*\n* @example\n* import Int8Array from '@stdlib/array-int8' ;\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\nfunction isTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for the abstract class...\n\tif ( value instanceof TypedArray ) {\n\t\treturn true;\n\t}\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isTypedArray;\n"],"names":["CTORS","Float64Array","Float32Array","Int32Array","Uint32Array","Int16Array","Uint16Array","Int8Array","Uint8Array","Uint8ClampedArray","TypedArray","hasFloat64ArraySupport","getPrototypeOf","Dummy","isTypedArray","value","v","i","length","ctorName","NAMES","fcnName"],"mappings":";;2jCAmCA,IAAIA,EAAQ,CACXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,wICVGC,EAAeC,IAA6BC,EAAgBX,GAAiBY,EAajF,SAASA,IAAU,CAiBnB,SAASC,EAAcC,GACtB,IAAIC,EACAC,EAEJ,GAAsB,iBAAVF,GAAgC,OAAVA,EACjC,OAAO,EAGR,GAAKA,aAAiBL,EACrB,OAAO,EAGR,IAAMO,EAAI,EAAGA,EAAIjB,EAAMkB,OAAQD,IAC9B,GAAKF,aAAiBf,EAAOiB,GAC5B,OAAO,EAIT,KAAQF,GAAQ,CAEf,IADAC,EAAIG,EAAUJ,GACRE,EAAI,EAAGA,EAAIG,EAAMF,OAAQD,IAC9B,GAAKG,EAAOH,KAAQD,EACnB,OAAO,EAGTD,EAAQH,EAAgBG,EACxB,CAED,OAAO,CACR,CAxDAL,EAAyC,eAA1BW,EAASX,GAAkCA,EAAaG"}